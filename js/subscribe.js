// ./js/subscribe.js
function toggleSidebar() {
  const sidebar = document.getElementById("sidebar");
  if (sidebar) {
    sidebar.style.display = "none"; 
  }
}

function showToast(message, type = 'info') {
  const toast = document.createElement('div');
  toast.className = `fixed top-20 right-4 z-50 px-6 py-3 rounded-lg text-white font-medium transform translate-x-full transition-transform duration-300`;
  switch (type) {
    case 'success': toast.classList.add('bg-green-500'); break;
    case 'error': toast.classList.add('bg-red-500'); break;
    case 'warning': toast.classList.add('bg-yellow-500'); break;
    default: toast.classList.add('bg-blue-500');
  }
  toast.textContent = message;
  document.body.appendChild(toast);

  // slide in
  setTimeout(() => toast.classList.remove('translate-x-full'), 10);

  // slide out + remove
  setTimeout(() => {
    toast.classList.add('translate-x-full');
    setTimeout(() => toast.remove(), 200);
  }, 2000);
}
const API_BASE_URL = 'https://admin.tinovideo.com';
function fillDataUser(user) {
    const nameDiv = document.querySelector('[data-key="user-name"]');
    if (nameDiv) nameDiv.textContent = user.name;

    const point = document.querySelector('[data-key="point"]');
    if (point) point.textContent = user.point;

    const avatarImg = document.querySelector('[data-key="user-avatar"]');
    if (avatarImg) avatarImg.src = user.avatar;

    const userPlan = document.querySelector('[data-key="user-plan"]');
    // if (userPlan) userPlan.textContent = user.plan || "Ch∆∞a c√≥ g√≥i";
    const claimedPlans = [
        user.free_claimed && "Free",
        user.standard_claimed && "Standard",
        user.pro_claimed && "Pro",
        user.max_claimed && "Max"
    ].filter(Boolean);

    let highestPlan = "Ch∆∞a c√≥ g√≥i";
    const PLAN_PRIORITY = ["Max", "Pro", "Standard", "Free"];
    for (const plan of PLAN_PRIORITY) {
        if (claimedPlans.includes(plan)) {
            highestPlan = plan;
            break;
        }
    }

    if (userPlan) userPlan.textContent = user.role;

    // console.log("‚úÖ User ƒë√£ fill:", user);
}
async function getUserInfoOnce() {
  console.log("2 da vao");
  
    // const authData = localStorage.getItem("auth_data");
    // if (authData) {
    //     cachedUser = JSON.parse(authData);
    //     fillDataUser(cachedUser);
    //     return cachedUser;
    // }
    // console.log("‚úÖ User ƒë√£ fill:", authData);
    const token = localStorage.getItem("jwt");
    if (!token) return null;

    try {
        const res = await fetch(`${API_BASE_URL}/api/user`, {
            method: "GET",
            headers: { Authorization: `Bearer ${token}` }
        });
        const data = await res.json();
        if (data.success) {
            cachedUser = data.user;
            localStorage.setItem("auth_data", JSON.stringify(data.user));
            fillDataUser(cachedUser);  // ‚úÖ truy·ªÅn ƒë√∫ng user
            console.log(cachedUser);
            
            return cachedUser;
        } else {
            console.warn("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin user:", data.error);
            return null;
        }
    } catch (err) {
        console.error("‚ùå L·ªói k·∫øt n·ªëi:", err);
        return null;
    }
}
getUserInfoOnce();
document.addEventListener("DOMContentLoaded", () => {
  
  // const user =  getUserInfoOnce();
  console.log("1 goi getUserInfoOnce");
      // if (user) {
      //   // Sau khi fill xong th√¨ l∆∞u userId ƒë·ªÉ chia s·∫ª link
      //   localStorage.setItem("userId", user.id);
      // }
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ DOM cache ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const billingBtns = document.querySelectorAll(".billing-btn");
  const priceEls = document.querySelectorAll(".amount");
  const origPriceEls = document.querySelectorAll(".original-price");
  const billedEls = document.querySelectorAll(".billed-amount");
  const periodEls = document.querySelectorAll(".price .period");
   localStorage.removeItem("auth_data");
   window.cachedUser = null;
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const setActiveBtn = btn => {
    billingBtns.forEach(b => b.classList.toggle("active", b === btn));
  };

  const updatePrices = mode => {
    /* 1Ô∏è‚É£ C·∫≠p nh·∫≠t gi√°, d√≤ng g·ªëc, billed-amount */
    priceEls.forEach(el => el.textContent = el.dataset[mode] || "--");
    origPriceEls.forEach(el => {
      const txt = el.dataset[mode] || "";
      el.textContent = txt;
      // ·∫®n khi r·ªóng (th√°ng) ‚Äì hi·ªán khi c√≥ (nƒÉm)
      el.style.display = txt ? "block" : "none";
    });
    billedEls.forEach(el => {
      const txt = el.dataset[mode] || "";
      el.textContent = txt;
      el.style.display = txt ? "block" : "none";
    });

    /* 2Ô∏è‚É£ Badge ‚ÄúGi·∫£m XX%‚Äù ch·ªâ hi·ªán ·ªü nƒÉm */
    document.querySelectorAll(".discount").forEach(el => {
      el.style.display = mode === "yearly" ? "inline-block" : "none";
    });

    /* 3Ô∏è‚É£ ƒê·ªïi h·∫≠u t·ªë /Th√°ng ‚Äì /NƒÉm */
    periodEls.forEach(el => el.textContent = mode === "monthly" ? "/Th√°ng" : "/NƒÉm");
  };
  const freeClaimed = localStorage.getItem("free_claimed");

  if (freeClaimed === "true") {
    document.querySelectorAll(".subscribe-btn").forEach(btn => {
      const plan = btn.dataset.plan;
      if (plan === "free") {
        btn.disabled = true;
        btn.innerText = "ƒê√£ nh·∫≠n";
        btn.style.backgroundColor = "#ccc"; // ho·∫∑c ƒë·ªïi sang class CSS
        btn.style.cursor = "not-allowed";   // cho UX r√µ h∆°n
      }
    });
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Event: toggle th√°ng / nƒÉm ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  billingBtns.forEach(btn => {
    btn.addEventListener("click", () => {
      setActiveBtn(btn);
      updatePrices(btn.dataset.billing);   // "monthly" | "yearly"
    });
  });

  updatePrices("monthly");                 // Kh·ªüi t·∫°o

  async function claimFree(buttonElement) {
    const token = localStorage.getItem("jwt");
    const free_claimed = localStorage.getItem("free_claimed");

    // ƒê√£ nh·∫≠n r·ªìi
    if (free_claimed === "true") {
      showToast('üéâ B·∫°n ƒë√£ nh·∫≠n 50 ƒëi·ªÉm tr∆∞·ªõc ƒë√≥ r·ªìi!', 'error');

      // V√¥ hi·ªáu h√≥a n√∫t n·∫øu c√≥ truy·ªÅn v√†o
      if (buttonElement) {
        buttonElement.disabled = true;
        buttonElement.innerText = "ƒê√£ nh·∫≠n";
        buttonElement.style.backgroundColor = "#ccc"; // ƒë·ªïi m√†u x√°m
      }

      return;
    }

    try {
      const resp = await fetch("https://admin.tinovideo.com/api/free", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`
        }
      });

      const data = await resp.json();

      if (!resp.ok) throw new Error(data?.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh");

      showToast('üéâ B·∫°n v·ª´a nh·∫≠n 50 ƒëi·ªÉm!', 'success');
      localStorage.setItem("free_claimed", "true");

      // N·∫øu c√≥ n√∫t th√¨ v√¥ hi·ªáu ho√° lu√¥n sau khi nh·∫≠n
      if (buttonElement) {
        buttonElement.disabled = true;
        buttonElement.innerText = "ƒê√£ nh·∫≠n";
        buttonElement.style.backgroundColor = "#ccc";
      }

    } catch (err) {
      showToast(err.message, 'error');
    }
  }

  function buildPlanObject(cardEl) {
    return {
      name: cardEl.querySelector(".plan-header h3").textContent.trim(),
      price: cardEl.querySelector(".price .amount").textContent.trim(),
      billed: document.querySelector(".billing-btn.active")?.dataset.billing === "yearly"
        ? "Theo nƒÉm" : "Theo th√°ng",
      period: document.querySelector(".billing-btn.active")?.dataset.billing === "yearly"
        ? "Y" : "M",
      features: [...cardEl.querySelectorAll(".features li")].map(li => li.textContent.trim())
    };
  }

  function openCheckout(cardEl) {
    const planObj = buildPlanObject(cardEl);
    localStorage.setItem("selectedPlan", JSON.stringify(planObj));
    window.location.href = "./payment.html";
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Event: click c√°c g√≥i ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  document.querySelectorAll(".subscribe-btn").forEach(btn => {
    btn.addEventListener("click", () => {
      const plan = btn.dataset.plan; // "free", "max", ...
      if (plan === "free") {
        claimFree(btn); // ‚úÖ Truy·ªÅn btn ƒë·ªÉ x·ª≠ l√Ω UI
      } else {
        const card = btn.closest(".pricing-card");
        if (card) openCheckout(card);
      }
    });
  });

});
