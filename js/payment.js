/* ---------------------  payment.js  --------------------- */
const API_MAIN_BASE_URL = 'https://admin.tinovideo.com';

document.addEventListener("DOMContentLoaded", () => {
  /* ===== 1. L·∫§Y & HI·ªÇN TH·ªä G√ìI ===== */
  const plan = JSON.parse(localStorage.getItem("selectedPlan") || "null");
  if (!plan) {
    alert("Kh√¥ng t√¨m th·∫•y th√¥ng tin g√≥i!");
    return;
  }

  document.querySelector(".course-title").textContent = plan.name;
  document.querySelector(".course-subtitle").textContent =
    `G√≥i ${plan.name} - thanh to√°n ${plan.billed}`;
  document.querySelector(".html-badge").textContent = plan.name;
  document.querySelector(".price-row span:nth-child(2)").textContent = plan.price;
  document.querySelector(".total-amount").textContent = plan.price;

  const featureList = document.querySelector(".features");
  featureList.innerHTML = "";
  (plan.features || []).forEach(f => {
    const li = document.createElement("li");
    li.textContent = f;
    featureList.appendChild(li);
  });

  /* ===== 2. ·∫®N QR L√öC ƒê·∫¶U ===== */
  const qrContainer = document.querySelector(".qr-container");
  qrContainer.classList.add("hidden");                 // c·∫ßn CSS .hidden {display:none}
  const qrImg = document.getElementById("qr");

  /* ===== 3. CHU·∫®N B·ªä D·ªÆ LI·ªÜU THANH TO√ÅN ===== */
  const amount = Number(plan.price.replace(/\D/g, ""));               // 200000
  document.querySelector(".value.amount").textContent = new Intl.NumberFormat("vi-VN").format(amount) + " ƒë";
  const rawData = localStorage.getItem("auth_data");
  let auth_data = null;  // Khai b√°o bi·∫øn to√†n c·ª•c
  let userId = null;
  if (rawData) {
    const auth_data = JSON.parse(rawData);
    userId = auth_data.id;
  } else {
    console.warn("‚ö†Ô∏è auth_data not found in localStorage");
  }
  const vietqrOption = document.querySelector(".method-option");
  if (!vietqrOption) return;
  async function handleVietqrClick() {
    if (vietqrOption.dataset.loading) return;
    vietqrOption.dataset.loading = "1";
    const reference = "VD" + plan.name + "T7LQRX8M" + userId;
    document.querySelector(".value.reference").textContent = reference;

    try {
      const res = await fetch(`${API_MAIN_BASE_URL}/api/vietqr`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          amount: amount,
          description: reference,
        })
      });

      if (!res.ok) throw new Error(`API tr·∫£ ${res.status}`);

      // ---- X√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu tr·∫£ v·ªÅ ----
      const ct = res.headers.get("content-type") || "";
      let qrUrl = "";

      if (ct.startsWith("image/")) {                    // ·∫£nh PNG tr·ª±c ti·∫øp
        const blob = await res.blob();
        qrUrl = URL.createObjectURL(blob);
      } else if (ct.includes("application/json")) {     // JSON
        const data = await res.json();
        qrUrl = data.url || data.qr_url || "";
      } else {                                         // plain-text
        qrUrl = (await res.text()).trim();
      }

      if (!qrUrl) throw new Error("Kh√¥ng nh·∫≠n ƒë∆∞·ª£c URL QR");

      // ---- Hi·ªÉn th·ªã k·∫øt qu·∫£ ----
      qrImg.src = qrUrl;
      qrContainer.classList.remove("hidden");           // hi·ªán kh·ªëi QR
       pollPaymentStatus(reference);

    } catch (err) {
      console.error("VietQR API error:", err);
      alert("Kh√¥ng l·∫•y ƒë∆∞·ª£c QR. Vui l√≤ng th·ª≠ l·∫°i!");
      delete vietqrOption.dataset.loading;
      // g·∫Øn l·∫°i listener ƒë·ªÉ ng∆∞·ªùi d√πng th·ª≠ l·∫ßn n·ªØa
      vietqrOption.addEventListener("click", handleVietqrClick, { once: true });
    }
  }
 function pollPaymentStatus(reference, retries = 20, delay = 5000) {
  let attempt = 0;

  const interval = setInterval(async () => {
    attempt++;
    console.log(`üîÑ Ki·ªÉm tra tr·∫°ng th√°i thanh to√°n ‚Äì L·∫ßn ${attempt}`);

    try {
      const res = await fetch(`${API_MAIN_BASE_URL}/api/vietqr/status?reference=${reference}`);
      if (!res.ok) throw new Error(`Status ${res.status}`);
      const data = await res.json();

      if (data.paid) {
        clearInterval(interval);
        alert(`‚úÖ ƒê√£ nh·∫≠n ${data.amount.toLocaleString()}ƒë t·ª´ ${data.payer_name || 'ng∆∞·ªùi g·ª≠i'} l√∫c ${data.trans_time || '...'}!`);

        // üëâ X·ª≠ l√Ω ti·∫øp sau khi thanh to√°n th√†nh c√¥ng
        // V√≠ d·ª•: unlock UI, reload, chuy·ªÉn trang...
        // window.location.href = "/thank-you";

      } else if (attempt >= retries) {
        clearInterval(interval);
        alert("‚è± H·∫øt th·ªùi gian ch·ªù chuy·ªÉn kho·∫£n.");
      }
    } catch (err) {
      console.error("‚ùå L·ªói khi ki·ªÉm tra thanh to√°n:", err);
      if (attempt >= retries) clearInterval(interval);
    }
  }, delay);
}




  // G·∫Øn listener CH·ªà M·ªòT L·∫¶N; sau khi th√†nh c√¥ng s·∫Ω t·ª± g·ª°, kh√¥ng g·ªçi l·∫°i
  vietqrOption.addEventListener("click", handleVietqrClick, { once: true });
});
/* ------------------------------------------------------- */
